<Home>:
    name: "home"
    outliner: [home, profile, sell, used, feeds]

#    MDNavigationLayout:
#        ScreenManager:
#            Screen:
    MDBottomNavigation:
        id: raw
        # text_color_normal: [1, 1, 1, 1] if app.theme_cls.theme_style == "Dark" else [0, 0, 0, 1]
        #panel_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else self.panel_color
        MDBottomNavigationItem:
            id: home
            icon: "home"
            text: "Home"
            name: "home"
            root: root
            on_tab_release:
                a = root.outliner.copy()
                a.remove(self)
                root.outline(a, self)
            MDBoxLayout:
                orientation:"vertical"
                #md_bg_color: get_color_from_hex("#FFFFFF") if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
                MDBoxLayout:
                    adaptive_height: True
                    padding: dp(10)
                    M_CardTextField:
                        elevation: 10
                        radius: dp(20)
                        hint_text: "search"
                        icon_left: "magnify"
                        icon_right: "cart-variant"
                        icon_right_callback: root.go_cart
                        # icon_left_callback: lambda x: rv.refresh_from_data()
                        text_field_disabled: True
                        icon_right_color: app.theme_cls.primary_color
                        icon_left_color: app.theme_cls.primary_color
                        foreground_color: [0, 0, 0, 0.8] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
                        cursor_color: [0, 0, 0, .7] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
                        md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
                        background_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
                        disabled_foreground_color: [0.5, 0.5, 0.5, 1.0]
                        on_release:
                            root.manager.prev_screen.append(root.name)
                            root.manager.ids.search.p_type = True
                            root.manager.current = "search"

                RecycleView:
                    id: rv
                    effect_cls: ScrollEffect
                    key_viewclass: "viewclass"
                    do_scroll_x: False
                    scroll_type: ["content", "bars"]
                    bar_width: "10dp"
                    on_scroll_start: root.schedule_load()
                    RecycleGridLayout:
                        id: holder
                        root: root.manager
                        roots: root
                        default_size_hint: 1, None
                        default_size: 0, dp(100)
                        size_hint_y: None
                        height: self.minimum_height
                        spacing:dp(10)
                        padding: dp(0)
                        cols: 1
                        key_size: "_size"



        MDBottomNavigationItem:
            id: feeds
            name: "feeds"
            text: "Feeds"
            icon: "newspaper-variant-outline"
            root: root
            on_enter:
                self.children[0].dispatch("on_enter")
            on_leave:
                self.children[0].dispatch("on_leave")
            on_tab_release:
                a = root.outliner.copy()
                a.remove(self)
                root.outline(a, self)
            Feeds:
                root: root

        MDBottomNavigationItem:
            id: sell
            name: "sell"
            text: "sell"
            icon: "plus-circle-outline"
            on_enter:
                self.children[0].dispatch("on_enter")
            on_leave:
                self.children[0].dispatch("on_leave")
            on_tab_release:
                a = root.outliner.copy()
                a.remove(self)
                root.outline(a, self)
            Sell:
                root: root
        MDBottomNavigationItem:
            id: used
            name: "used"
            text: "Fairly-Used"
            icon: "shield-off-outline"
            root: root
            on_enter:
                self.children[0].dispatch("on_enter")
            on_tab_release:
                a = root.outliner.copy()
                a.remove(self)
                root.outline(a, self)
            Used:
                root:root

        MDBottomNavigationItem:
            id: profile
            name: "new"
            text: "Profile"
            icon: "account-outline"
            root: root
            on_enter:
                self.children[0].dispatch("on_enter")
            on_tab_release:
                a = root.outliner.copy()
                a.remove(self)
                root.outline(a, self)
            Profile:
                id: profiles
                root: root

#    MDFloatingActionButton:
#        icon: "brightness-4"
#        pos_hint: {"center_y":.15}
#        on_release:
#            root.change_theme()
