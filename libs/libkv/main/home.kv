<Home>:
    name: "home"
    outliner: [home, profile, sell, used, feeds]
    on_enter: top_layer.root = root
    BoxLayout:
        orientation: "vertical"
        ScreenManager:
            id: manager
            transition: NoTransition()
            Screen:
                id: home
                name: "home"
                root: root
                MDBoxLayout:
                    orientation:"vertical"
                    MDBoxLayout:
                        adaptive_height: True
                        padding: dp(10)
                        orientation: "vertical"
                        TopLayerHome:
                            id: top_layer
                            callback: root.go_cart
                            root: root
                        M_CardTextField:
                            radius: [dp(10)] * 4
                            hint_text: "search"
                            icon_left: "magnify"
                            # icon_left_callback: lambda x: rv.refresh_from_data()
                            md_bg_color: 1, 1, 1, 1
                            background_color: 1, 1, 1, 1
                            icon_left_color: 1, 1, 1, 1
                            elevation: 0
                            text_field_disabled: True
                            card_padding: [dp(10), 0]
                            foreground_color: [0, 0, 0, 0.8] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
                            cursor_color: [0, 0, 0, .7] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
                            disabled_foreground_color: [0.5, 0.5, 0.5, 1.0]
                            on_release:
                                root.manager.prev_screen.append(root.name)
                                check_add_widget(app, "search_widget", root, "Factory.Search()", "search")
                                root.manager.ids.search.p_type = True
                                root.manager.current = "search"
                            AsyncImage:
                                size_hint_x: .2
                                source: "assets/image/search.gif"
                                anim_delay: .05

                    RecycleView:
                        id: rv
                        key_viewclass: "viewclass"
                        do_scroll_x: False
                        effect_cls: ScrollEffect
                        scroll_distance: dp(3)
                        on_scroll_y:
                            if self.scroll_y == -0.0 and (root.image_loaded == root.len_rv_data) and root.data_trending:\
                            root.snack.open()
                        RecycleBoxLayout:
                            id: holder
                            root: root.manager
                            roots: root
                            default_size_hint: 1, None
                            default_size: 0, Window.height/4.5
                            size_hint_y: None
                            height: self.minimum_height
                            spacing:dp(20)
                            padding: [0, 0, 0, dp(100)]
                            orientation: "vertical"
                            key_size: "_size"

    BottomNavigation:
        id: nav
        bg_color: 1, 1, 1, 1
        elevation: 8
        NavButton:
            id: home
            text: "home"
            icon: "home"
            root: root
            widget: False
            on_release: manager.current = "home"
        NavButton:
            id: feeds
            text: "Feeds"
            icon: "newspaper-variant"
            root: root
            widget: False
            on_release:
                if not self.widget: root.switch_tab(Factory.Feeds(root=root), self, "feed")
                manager.current = "feeds"
        NavButton:
            id: sell
            text: "sell"
            icon: "plus-circle"
            root: root
            widget: False
            on_release:
                if not self.widget: root.switch_tab(Factory.Sell(root=root), self, "sell")
                manager.current = "sell"

        NavButton:
            id: used
            text: "Fairly-Used"
            icon: "shield-off"
            root: root
            widget: False
            on_release:
                if not self.widget: root.switch_tab(Factory.Used(root=root), self, "used")
                manager.current = "used"

        NavButton:
            id: profile
            text: "Profile"
            icon: "account"
            root: root
            widget: False
            on_release:
                root.confirm_login_profile(self)

    FloatingButton:
        root: root
        magic_speed: 0.1
        icon: "gift-open"
        pos_hint: {"right": .95, "center_y": .15}
        theme_text_color: "Custom"
        text_color: 1, 1, 1, .99
        md_bg_color: get_color_from_hex("#C51162")
        on_release: self.spinner_view.open()