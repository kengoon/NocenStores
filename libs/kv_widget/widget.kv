#:import MDDropdownMenu kivymd.uix.menu.MDDropdownMenu
#:import MDBoxLayout kivymd.uix.boxlayout.MDBoxLayout
#:import MDLabel kivymd.uix.label.MDLabel
<OtherSalesCard@BaseSalesCard>
    elevation: 0 if app.theme_cls.theme_style == "Light" else 1

<AccoCard@BaseSalesCard>
    ripple_behavior: True

<SalesCard@BaseSalesCard>
    imagePath: ""
    source: ""
    _size: 0, 0
    size: self.size
    callback:
        lambda: exec('self.parent.root.root.manager.prev_screen.append(self.parent.root.root.name);'
        'check_add_widget(app, "lookout_widget", self.parent.root.root, Factory.ProductLookOut(), "lookout");'
        'self.parent.root.root.manager.current = "lookout";'
        'self.parent.root.root.manager.ids.lookout.ids.product_name.text = self.product;'
        'self.parent.root.root.manager.ids.lookout.update_interface(self.data)')

<BaseSalesCard@MDCard>:
    elevation: 1
    source: ""
    text: ""
    radius: [dp(6)]
    product: ""
    price: 0
    text_radius: [dp(5)]
    store: ""
    #text_color: [1, 1, 1, 1]
    orientation: "vertical"
    data: {"product": self.product, "store": self.store}
    callback: lambda: None
    MDBoxLayout:
        padding: dp(10)
        M_FitImage:
            source: root.source
            radius: [root.radius[0]]
#            on_source:
#                if self.source != "assets/loader.gif": root.store_image_state()

    MDBoxLayout:
        orientation: "vertical"
        padding: dp(10)
        adaptive_height: True
        spacing: dp(10)
        M_AKLabelLoader:
            text:
                "" if not ((root.price and root.product) or root.text) else\
                f"{root.product}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price) + 5/100 * float(root.price):,}[/color][/b]" \
                if root.price and root.product else\
                root.text
            radius: root.text_radius
            size_hint_y: None
            markup: True
            theme_text_color: "Custom"
            text_color: app.theme_cls.text_color
            height: dp(20) if not self.text else self.texture_size[1]
            font_size: dp(17)
            #font_style: "Money"
            halign:"left"
            pos_hint:{"center_y": .5}
        MDCard:
            size_hint_y: None
            height: self.minimum_height
            padding: dp(10)
            radius: [dp(5)]
            md_bg_color: app.theme_cls.primary_color
            on_release: root.callback
            MDLabel:
                text: "View Product"
                font_style: "Button"
                size_hint_y: None
                height: self.texture_size[1]
                halign: "center"
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1

<FeedsCard@MDCard>:
    #elevation: 0 if app.theme_cls.theme_style == "Light" else 1
    image_url: ""
    radius: [dp(6)]
    store: ""
    name: ""
    price: ""
    text_radius: [dp(5)]
    phone: ""
    url: ""
    orientation: "vertical"
    rates: rates
    data: {"product": self.name, "store": self.store}
    ripple_color: app.theme_cls.primary_color
    ripple_behavior: True
    on_release: root.parent.root.proceed_to_lookout(self)
    RelativeLayout:
        AsyncImage:
            id: image
            source: root.image_url
            anim_delay: .1
            allow_stretch: True
            keep_ratio: False #if app.image_has_transparency(self, self.source) else False
            nocache: True
            on_load:
                loader.opacity = 0
            canvas.before:
                StencilPush
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [root.radius[0], root.radius[0], 0, 0]
                StencilUse

            canvas.after:
                StencilUnUse
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [root.radius[0], root.radius[0], 0, 0]
                StencilPop
        M_AKImageLoader:
            id: loader
            radius: [root.radius[0], root.radius[0], 0, 0]
            circle: False
#            source: "https://image.shutterstock.com/image-photo/view-lagos-lagoon-victoria-island-260nw-1066980758.jpg"
#            on_load:
#                print("yaa")
        MDBoxLayout:
            id:box
            padding: dp(10)
            adaptive_height: True
            md_bg_color: 0, 0, 0, .6
            radius: [0, 0, 0, 0]
            M_AKLabelLoader:
                text: "" if not root.store else f"Store: NocenStore"
                radius: root.text_radius
                size_hint_y: None
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1
                height: dp(20) if not self.text else self.texture_size[1]
                font_style: "Money"
                font_size: dp(16)
                halign:"left"
            AKRating:
                id: rates
                animation_type: 'grow'
                normal_color: 1,1,1,.8
                active_color: app.theme_cls.primary_color
                _selected: 3
                icon_size: dp(20)
                disabled: True
                pos_hint: {"center_x": .5}
    MDBoxLayout
        adaptive_height: True
        padding: dp(10)
        M_AKLabelLoader:
            text:
                "" if not root.price and not root.name else \
                f"{root.name}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price if root.price else 0) + 5/100 * float(root.price if root.price else 0):,}[/color][/b]"
            radius: root.text_radius
            size_hint_y: None
            markup: True
            theme_text_color: "Custom"
            text_color: app.theme_cls.text_color
            height: dp(20) if not self.text else self.texture_size[1]
            font_size: dp(17)
            halign:"left"
            pos_hint:{"center_y": .5}


<UserActivity@MDGridLayout>:
    cols: 1
    #spacing: dp(5)
    adaptive_height: True
    text: ["", ""]
    icon: ""
    icon_color: get_color_from_hex("#2196F3")
    customer: total
    MDIcon:
        icon: root.icon
        disabled: True
        halign: "center"
        color: root.icon_color
        size_hint_y: None
        height: self.texture_size[1]
        font_size: dp(17)
    MDLabel:
        text: root.text[0]
        font_style: "Money"
        disabled: True
        halign: "center"
        font_size: "12sp"
        size_hint_y: None
        height: self.texture_size[1]

    MDLabel:
        id: total
        text: root.text[1]
        disabled: True
        font_style: "Money"
        halign: "center"
        size_hint_y: None
        font_size: "15dp"
        height: self.texture_size[1]

<CategoryCard>:
    source: ""
    text: ""
    radius: dp(10)
    product_name: ""
    product_price: 0
    text_radius: [dp(5)]
    product_owner: ""
    #text_color: [1, 1, 1, 1]
    orientation: "vertical"
    padding: dp(5)
    texture_color: get_color_from_hex('66BB6A')
    texture:
        Gradient.horizontal(
        get_color_from_hex("66BB6A"),
        get_color_from_hex("00C853")
        )
    canvas:
        Color:
            rgba: root.texture_color
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: root.radius
            texture: self.texture

    AsyncImage:
        id: image
        source: root.source
        anim_delay: .1
        canvas.before:
            StencilPush
            RoundedRectangle:
                pos: self.pos
                size: self.size
                radius: [root.radius[0], root.radius[0], 0, 0]
            StencilUse

        canvas.after:
            StencilUnUse
            RoundedRectangle:
                size: self.size
                pos: self.pos
                radius: [root.radius[0], root.radius[0], 0, 0]
            StencilPop
    MDBoxLayout:
        adaptive_height: True
        padding: dp(10)
        orientation:"vertical"
        MDLabel:
            id: lbl
            text: root.text
            size_hint_y: None
            height: self.texture_size[1]
            color: 1, 1, 1, 1
            font_style: "Money"
            font_size: "11dp"
            valign: "top"
            halign: "center"
#<PendingReviewCard@BaseReviewProductCard>
#    on_release: root.parent.root.comment_dialog()


<OrderCard@BaseReviewProductCard>
    source: ""
    imagePath: self.source

    on_release:
        None

<CategoryProductCard@BaseProductCard>
    size_hint_y: None
    _size: 0, 0
    size: self._size

<BaseProductCard>:
    elevation: 1
    #imagePath: ""
    store: ""
    product: ""
    price: "0"
    check: ""
    text_radius: [dp(5)]
    rate: 4
    radius: [dp(10)]
    data: {"product": self.product, "store": self.store}
    orientation: "vertical"
    size_hint_y: None
    height: Window.height/2.2
    source: ""
    M_FitImage:
        id: image
        source: root.source
        anim_delay: .1
        radius: root.radius[0], root.radius[0], 0, 0
    MDBoxLayout:
        orientation: "vertical"
        padding: dp(10)
        spacing: dp(5)
        size_hint_y: .7
        M_AKLabelLoader:
            text:
                "" if not (root.price and root.product) else \
                f"{shorten(root.product, width=20, placeholder='...')}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price.replace(',', '')) + 5/100 * float(root.price.replace(',', '')):,}[/color][/b]" if \
                not root.check else f"{root.product}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}]{root.price}[/color][/b]"
            radius: root.text_radius
            size_hint_y: None
            markup: True
            height: dp(20) if not self.text else self.texture_size[1]

        AKRating:
            id: rates
            normal_icon: 'star-box-outline'
            active_icon: 'star-box'
            animation_type: 'grow'
            normal_color: app.theme_cls.disabled_hint_text_color
            active_color: app.theme_cls.primary_color
            icon_size: dp(20)
            disabled: True
            _selected: root.rate
        MDLabel:
            text: f"[color=388E3C]store:[/color] NocenStore"
            #color: get_color_from_hex("388E3C")
            font_style: "Money"
            markup: True

        MDBoxLayout:
            orientation: "vertical"
            adaptive_height: True
            radius: [dp(5)]
            padding:[dp(5), 0, dp(5), 0]
            MDCard:
                size_hint_y: None
                height: self.minimum_height
                padding: dp(10)
                radius: [dp(5)]
                md_bg_color: app.theme_cls.primary_color
                on_release:
                    root.parent.root.prev_screen.append(root.parent.roots.name)
                    check_add_widget(app, "lookout_widget", root.parent, Factory.ProductLookOut(), "lookout")
                    root.parent.root.current = "lookout"
                    root.parent.root.ids.lookout.ids.product_name.text = root.product
                    #self.parent.root.ids.lookout.ids.store.text = self.store
                    root.parent.root.ids.lookout.update_interface(root.data)

                MDLabel:
                    text: "View Product"
                    font_style: "Button"
                    size_hint_y: None
                    height: self.texture_size[1]
                    halign: "center"
                    theme_text_color: "Custom"
                    text_color: 1, 1, 1, 1

<BaseReviewProductCard@MDCard>:
    ripple_behavior: True
    imagePath: ""
    store: ""
    product: ""
    price: "0"
    check: ""
    text_radius: [dp(5)]
    rate: 4
    radius: [dp(10)]
    data: {"product": self.product, "store": self.store}
    RelativeLayout:
        size_hint_x: .7
        size_hint_y: None
        height: Window.height/4.5
        AsyncImage:
            id: image
            color: 0, 0, 0, 0
            source: root.imagePath
            anim_delay: .1
            keep_ratio: False
            nocache: True
            on_load:
                loader.opacity = 0
                self.color = [1, 1, 1, 1]
            canvas.before:
                StencilPush
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [root.radius[0], 0, 0, root.radius[0]]
                StencilUse

            canvas.after:
                StencilUnUse
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [root.radius[0], 0, 0, root.radius[0]]
                StencilPop
        M_AKImageLoader:
            id: loader
            radius: [root.radius[0], root.radius[0], 0, 0]
            circle: False
    MDBoxLayout:
        orientation: "vertical"
        padding: dp(10)
        spacing: dp(5)
        M_AKLabelLoader:
            text:
                "" if not (root.price and root.product) else \
                f"{root.product}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price.replace(',', '')) + 5/100 * float(root.price.replace(',', '')):,}[/color][/b]" if \
                not root.check else f"{root.product}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}]{root.price}[/color][/b]"
            radius: root.text_radius
            size_hint_y: None
            markup: True
            height: dp(20) if not self.text else self.texture_size[1]

        AKRating:
            id: rates
            normal_icon: 'star-box-outline'
            active_icon: 'star-box'
            animation_type: 'grow'
            normal_color: app.theme_cls.disabled_hint_text_color
            active_color: app.theme_cls.primary_color
            icon_size: dp(20)
            disabled: True
            _selected: root.rate
        MDLabel:
            text: f"[color=388E3C]store:[/color] NocenStore"
            #color: get_color_from_hex("388E3C")
            font_style: "Money"
            markup: True

        MDBoxLayout:
            adaptive_height: True
            size_hint_x: None
            width: self.parent.width/2
            md_bg_color: 0,1,0,.1
            radius: [dp(5)]
            MDLabel:
                id: la
                text: "NOCENSTORE" if not root.check else root.check
                font_style: "Money"
                italic: True
                color: app.theme_cls.primary_color
                size_hint_y: None
                height: self.texture_size[1]
                halign: "center"
                font_size: dp(13)





<CardIconButton@MDCard>:
    #icon_width: None
    size_hint_y: None
    height: self.minimum_height
    text: ""
    icon: ""
    icon_color: 0, 0, 0, 1
    text_color: 0, 0, 0, 1
    font_style: "Caption"
    label_halign: "center"
    ripple_behavior: True
    radius: [dp(5)]
    MDIconButton:
        id: icon
        icon: root.icon
        theme_text_color: "Custom"
        text_color: root.icon_color
        #size_hint_x: None
        #width: self.texture_size[0] if not root.icon_width else root.icon_width

    MDLabel:
        halign: root.label_halign
        text: root.text
        color: root.text_color
        size_hint_y: None
        font_style: root.font_style
        height: self.texture_size[1]
        pos_hint:{"center_y": .5}

<ProductCard@MDCard>
    background: ""
    radius: [dp(10)]
    source: ""
    text: self.source
    RelativeLayout:
        MDIcon:
            id: ico
            icon: "image-plus"
            halign: "center"
            font_size: dp(50)
            color: app.theme_cls.disabled_hint_text_color
        FitImage:
            source: root.source
            radius: root.radius

<PictureCard@MDCard>:
    spacing: dp(10)
    source:""
    text: ""
    Image:
        source: root.source
        allow_stretch: True
        keep_ratio: False
        size_hint_x: .5
    MDLabel:
        text: root.text

<PlatformCan@MDBoxLayout>
    orientation: "vertical"
    adaptive_height: True
    icon: ""
    text: ""
    item: ""
    bg_color: [0,0,0,0]
    card_color: 1, 1, 1, 1
    MDCard:
        size_hint: None, None
        size: self.minimum_size
        radius: [dp(10)]
        elevation: 0.1
        md_bg_color: root.card_color
        pos_hint: {"center_x": .5}
        MDIconButton:
            icon: root.icon
            theme_text_color: "Custom"
            text_color: root.bg_color
            #md_bg_color: root.bg_color
            on_release:
                root.root.manager.on_next_screen(root.root.name)
                root.root.manager.current = root.item.lower()

    MDLabel:
        halign: "center"
        size_hint_y: None
        text: root.text
        font_style: "Caption"
        shorten: True
        shorten_from: "right"
        height: self.texture_size[1]

<AccoLocation@MDBoxLayout>
    orientation: "vertical"
    size_hint_y: None
    text: ""
    height: rb.height + box.height + dp(5)
    MDBoxLayout:
        id: box
        adaptive_height: True
        padding: dp(10)
        MDLabel:
            size_hint_y: None
            height: self.texture_size[1]
            text: root.text
            font_style: "BigMoney"
    RecycleView:
        id: rv
        root: root
        effect_cls: ScrollEffect #_ScrollViewHardStop
        #do_scroll_y: False
        viewclass: "AccoCard"
        bar_width: 0
        RecycleBoxLayout:
            id: rb
            default_size_hint: None, None
            default_size: root.width/2.2 - dp(10), Window.height/3
            size_hint: None, None
            size: self.minimum_width ,self.minimum_height
            spacing:dp(10)
            orientation: "horizontal"
            padding: dp(5)
            canvas:
                Color:
                    rgba: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
                Rectangle:
                    size: self.size
                    pos: self.pos

<NotifyCard@MDCard>:
    size_hint_y: None
    height: Window.height/6
    ripple_behavior: True
    ripple_color: app.theme_cls.primary_color
    text: ""
    radius: [dp(20)]
    MDBoxLayout:
        size_hint: .5, None
        height: Window.height/6
        md_bg_color: app.theme_cls.primary_color
        radius: [dp(20), 0, 0, dp(20)]
        MDIcon:
            icon: "bell"
            color: 1,1,1,1
            font_size: dp(50)
            halign: "center"
    MDBoxLayout:
        size_hint_y: None
        height: Window.height/6
        padding: [dp(10), dp(20), dp(10), dp(20)]
        MDLabel:
            text: root.text
            #size_hint_y: None
            #height: self.texture_size[1]
            font_style: "Money"
            #halign: "center"
            valign: "top"
            text_size: self.size

<CommentField>
    size_hint_y: None
    height: "120dp"
    M_CardTextField:
        grow_card: True
        elevation: 1
        hint_text: "comment"
        foreground_color: app.theme_cls.text_color
        icon_right: "send"
        icon_right_color: app.theme_cls.primary_color
        icon_right_callback: root.root.send_comment
        cursor_color: app.theme_cls.text_color
        md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
        background_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")

<DealsCard@MDCard>:
    orientation: "vertical"
    elevation: 0
    image_url:""
    source: self.image_url
    radius: [dp(10)]
    text_radius: [dp(5)]
    name: ""
    store: ""
    price: ""
    ripple_behavior: True
    data: {"product": self.name, "store": self.store}
    on_release:
        self.parent.root.prev_screen.append(self.parent.roots.name)
        check_add_widget(app, "lookout_widget", self.parent.root, Factory.ProductLookOut(), "lookout")
        self.parent.root.current = "lookout"
        self.parent.root.ids.lookout.ids.product_name.text = self.name
        #self.parent.root.ids.lookout.ids.store.text = self.store
        self.parent.root.ids.lookout.update_interface(self.data)
    RelativeLayout:
        AsyncImage:
            id: image
            source: root.source
            anim_delay: .1
            allow_stretch: True
            keep_ratio: False #if app.image_has_transparency(self, self.source) else False
            nocache: True
            on_load:
                loader.opacity = 0
            canvas.before:
                StencilPush
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: root.radius
                StencilUse

            canvas.after:
                StencilUnUse
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: root.radius
                StencilPop
        M_AKImageLoader:
            id: loader
            radius: root.radius
            circle: False
        MDBoxLayout:
            id:box
            padding: dp(10)
            adaptive_height: True
            md_bg_color: 0, 0, 0, .4
            radius: [0, 0, root.radius[0], root.radius[0]]
            M_AKLabelLoader:
                text: "" if not root.price or not root.store or not root.name else f"Deal: {root.name}\n[color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price) + 5/100 * float(root.price):,}[/color]\nstore: NocenStore"
                radius: root.text_radius
                size_hint_y: None
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1
                height: dp(20) if not self.text else self.texture_size[1]
                font_size: dp(16)
                halign:"left"
                markup: True

<NewsCard@MDCard>:
    orientation: "vertical"
    size_hint_y: None
    height: Window.height/1.5
    padding: dp(10)
    spacing: dp(10)
    elevation: 0 if app.theme_cls.theme_style == "Light" else 1
    radius: [dp(10)]
    news: ""
    image_url:""
    news_app_url: ""
    news_url:""
    on_release:
        root.parent.roots.open_web(self)
    MDBoxLayout:
        adaptive_height: True
        spacing: dp(10)
        Widget:
            size_hint: None, None
            size: dp(100), dp(100)
            canvas.before:
                Color:
                    rgba: 1,1,1,1
                Ellipse:
                    size: self.size
                    pos: self.pos
                    source: "assets/logons1.png"
        MDBoxLayout:
            adaptive_height: True
            size_hint_x: None
            width: Window.width/3
            md_bg_color: 0,1,0,.1
            pos_hint:{"center_y": .5}
            radius: [dp(5)]
            MDLabel:
                id: la
                text: "NOCENSTORE"
                font_style: "Money"
                italic: True
                color: app.theme_cls.primary_color
                size_hint_y: None
                height: self.texture_size[1]
                halign: "center"
    MDLabel:
        text: root.news
        size_hint_y: None
        height: self.texture_size[1]

    MDRelativeLayout:
        M_FitImage:
            id: image
            source: root.image_url
            radius: root.radius
            load_callback: lambda x: exec("loader.opacity = 0")
        M_AKImageLoader:
            id: loader
            radius: root.radius
            circle: False

<PlanItem>
    adaptive_size: True
    on_touch_down: if self.collide_point(*args[1].pos): root.press_on_plan(root)

    MDBoxLayout:
        size_hint: None, None
        size: "40dp", "40dp"

        canvas.before:
            Color:
                rgba: root.color_select
            BorderImage
                pos: self.pos
                size: self.size
                source: "assets/border.png"

        Label:
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            text: root.text_item
            markup: True
            color: 0, 0, 0, 1

<CartCard@MDCard>:
    orientation: "vertical"
    size_hint_y: None
    height: Window.height/4.3
    radius: [dp(5)]
    product: ""
    source: ""
    price: ""
    store: ""
    base_price:
    count: 1
    p_type: False
    selected_size: ""
    padding: [dp(5), 0, dp(5), 0]
    MDBoxLayout:
        adaptive_height: True
        spacing: dp(5)
        padding: [0, 0, 0, dp(5)]
        AsyncImage:
            source: root.source
            nocache: True
            size_hint: None, None
            height: root.height - down.height - dp(5)
            width: root.width/3
        MDList:
            spacing: dp(10)
            padding: [0, 0, 0, dp(15)]
            MDLabel:
                text: root.product
                size_hint_y: None
                font_style: "H6"
                height: self.texture_size[1]
            MDLabel:
                text: root.price
                size_hint_y: None
                height: self.texture_size[1]
                color: app.theme_cls.primary_color

            MDBoxLayout:
                adaptive_height: True
                size_hint_x: None
                width: self.parent.width/2
                md_bg_color: 0,1,0,.1
                radius: [dp(5)]
                MDLabel:
                    id: la
                    text: "NocenStore"
                    font_style: "Money"
                    color: app.theme_cls.primary_color
                    size_hint_y: None
                    height: self.texture_size[1]
                    halign: "center"
                    font_size: dp(17)
    MDSeparator:
    MDBoxLayout:
        id: down
        adaptive_height: True
        spacing: root.width/3
        MDBoxLayout
            adaptive_height: True
            MDIconButton:
                icon: "delete"
                on_release: root.parent.roots.remove_product(root)
            MDTextButton:
                text: "REMOVE"
                pos_hint: {"center_y": .4}
                on_release: root.parent.roots.remove_product(root)
        MDBoxLayout
            adaptive_height: True
            MDIconButton:
                icon: "minus-box"
                disabled: True if root.p_type else False
                on_release: root.parent.roots.minus_one(root)
            MDTextField:
                id: count
                text: str(root.count)
                input_type: "number"
                input_filter: "int"
                size_hint_x: None
                width: dp(20)
                disabled: True
            MDIconButton:
                icon: "plus-box"
                disabled: True if root.p_type else False
                on_release: root.parent.roots.add_more(root)

<LeftIconToolBar@MDCard>:
    size_hint_y: None
    icon: ""
    title: ""
    height: self.minimum_height
    callback: None
    orientation: "vertical"
    padding: [dp(10), 0, dp(10), 0]
    md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")

    MDBoxLayout:
        size_hint: 1, None
        height: app.theme_cls.standard_increment
        spacing: dp(10)
        MDIconButton:
            icon: root.icon
            pos_hint: {"center_y": .5}
            on_release:
                root.callback()

        MDLabel:
            text: root.title + f"[color={get_hex_from_color(app.theme_cls.primary_color)}]•[/color]"
            color: [1,1,1,1] if app.theme_cls.theme_style == "Dark" else [0,0,0,.7]
            markup: True
            font_style:"BigMoney"
            bold: True
            pos_hint:{"center_y": .5}

<DoubleIconToolBar@MDCard>:
    icon_right: ""
    icon_left: ""
    title: ""
    icon_right_color: app.theme_cls.text_color
    icon_right_callback: None
    icon_left_callback: None
    size_hint_y: None
    height: self.minimum_height
    orientation: "vertical"
    padding: [dp(10), 0, dp(10), 0]
    md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")

    MDBoxLayout:
        size_hint: 1, None
        height: app.theme_cls.standard_increment
        spacing: dp(10)
        MDIconButton:
            icon: root.icon_left
            pos_hint: {"center_y": .5}
            on_release: root.icon_left_callback()

        MDLabel:
            text: root.title + f"[color={get_hex_from_color(app.theme_cls.primary_color)}]•[/color]"
            color: [1,1,1,1] if app.theme_cls.theme_style == "Dark" else [0,0,0,.7]
            markup: True
            font_style:"BigMoney"
            bold: True
            pos_hint:{"center_y": .5}
        MDIconButton:
            icon: root.icon_right
            pos_hint: {"center_y": .5}
            theme_text_color: "Custom"
            text_color: root.icon_right_color
            on_release: root.icon_right_callback()

<ProtoLabel@MDBoxLayout>:
    adaptive_height: True
    padding: dp(20)
    left_text: ""
    right_text: ""
    MDLabel:
        text: root.left_text
        bold: True
    MDLabel:
        halign: "right"
        text: root.right_text
        bold: True
        color: app.theme_cls.primary_color

<TextField@M_CardTextField>:
    grow: False
    elevation: 10
    hint_text: ""
    icon_left: ""
    icon_left_color: app.theme_cls.primary_color
    foreground_color: [0, 0, 0, 0.8] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
    cursor_color: [0, 0, 0, .7] if app.theme_cls.theme_style == "Light" else [1,1,1,1]
    md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
    background_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")
    disabled_foreground_color: [0.5, 0.5, 0.5, 1.0]

<ItemPagination>
    size_hint: None, None
    size: dp(20), dp(4)
    pos_hint: {'center_y': .5}
    canvas:
        Color:
            rgba:
                self.theme_cls.primary_color\
                if root.current_index == 0 else root.color_round_not_active
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(2)]

<Swiper>:
    orientation: "vertical"
    swiper: swiper
    padding: [0, 0, 0, dp(10)]
    root: None
    spacing: dp(5)
    size_hint_y: None
    _size: 0, 0
    size: self._size
    #md_bg_color: 1, 1, 1, 1
    on_root:
        self.root.swiper = swiper
    MDSwiper:
        id: swiper
        items_spacing: dp(10)
        m: int()
        pagnitors:[_0, _1, _2, _3, _4]
        on_scroll_start:
            if self.collide_point(*args[1].pos):\
            self.m = args[1].pos[0];\
            root.root.pause_clock()
        on_scroll_stop:
            if self.collide_point(*args[1].pos):\
            self.swipe_left() if self.m < args[1].pos[0] else self.swipe_right();\
            root.root.resume_clock()
        on_swipe:
            root.swipe_pagnitors(self, self.get_current_index())
        MDSwiperItem:
            M_CardLoader:
                source:"assets/ads/NO21-1.png"
                text: ""
                root: root.root

        MDSwiperItem:
            M_CardLoader
                source: "assets/ads/NO22-1.png"
                text: ""
                root: root.root

        MDSwiperItem:
            M_CardLoader
                source: "assets/ads/NO26-1.png"
                text: ""
                root: root.root

        MDSwiperItem:
            M_CardLoader
                source: "assets/ads/NO23-1.png"
                text: ""
                root: root.root

        MDSwiperItem:
            M_CardLoader
                source: "assets/ads/NO25-1.png"
                text: ""
                root: root.root
    MDBoxLayout:
        adaptive_size: True
        spacing: dp(10)
        pos_hint: {"center_x": .5}
        ItemPagination
            id: _0
        ItemPagination:
            id: _1
            current_index: 1
        ItemPagination:
            id: _2
            current_index: 2
        ItemPagination:
            id: _3
            current_index: 3
        ItemPagination:
            id: _4
            current_index: 4

<Platform@MDGridLayout>:
    root: None
    size_hint_y: None
    _size: 0, 0
    size: self._size
    padding: dp(10), 0, dp(10), 0
    cols: 4
    rows: 1
    PlatformCan:
        root: root.root
        icon: "shopping"
        text: "Today's Deals"
        item: "Deals"
        bg_color: 1, 1, 1, 1
        card_color: .8, 0, 0, 1

    PlatformCan:
        root: root.root
        icon: "headset"
        text: "Customer Care"
        item: "Customer Care"
        bg_color: 1, 1, 1, 1
        card_color: app.theme_cls.primary_color

    PlatformCan:
        root: root.root
        icon: "heart"
        text: "Saved Items"
        item: "Saved Items"
        bg_color: 1, 1, 1, 1
        card_color: 1, .7, 0, 1

    PlatformCan:
        root: root.root
        icon: "school"
        text: "Student Zone"
        item: "Student Zone"
        bg_color: 1, 1, 1, 1
        card_color: 1, 0, .8, 1

<Gridad@GridLayout>:
    root: None
    size_hint_y: None
    _size: 0, 0
    size: self.size
    cols: 2
    padding: dp(5), 0, dp(5), 0
    spacing: dp(10)
    CategoryCard:
        text: "Electronics"
        #text_color: 1, 1, 1, 1
        source: "assets/electronics.png"
        on_release: root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('3F2F4F')
        texture:
            Gradient.horizontal(
            get_color_from_hex('3F2F4F'),
            get_color_from_hex("8F5F8F"),
            )

    CategoryCard:
        text: "Portable Devices"
        source: "assets/portables.png"
        on_release: root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('3F3F3F')
        texture:
            Gradient.horizontal(
            get_color_from_hex('3F2F3F'),
            get_color_from_hex("787878"),
            )

    CategoryCard:
        text: "Clothing"
        source: "assets/clothing.png"
        #text_color: 1, 1, 1, 1
        on_release: root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('20E873')
        texture:
            Gradient.horizontal(
            get_color_from_hex('20E873'),
            get_color_from_hex("4fdf6f"),
            )

    CategoryCard:
        text: "Furniture"
        source: "assets/furniture.png"
        #text_color: 1, 1, 1, 1
        on_release: root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('E0E0E0')
        texture:
            Gradient.horizontal(
            get_color_from_hex('#d35d06'),
            get_color_from_hex("#eeae7e"),
            )

    CategoryCard:
        text: "Kitchen"
        source: "assets/kitchen.png"
        #text_color: 1, 1, 1, 1
        on_release:
            root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('#6f728b')
        texture:
            Gradient.horizontal(
            get_color_from_hex('#6f728b'),
            get_color_from_hex("#FFFFF"),
            )

    CategoryCard:
        text: "Beauty"
        source: "assets/beauty.png"
        on_release: root.root.change_screen(self, "category")
        texture_color: get_color_from_hex('C51162')
        texture:
            Gradient.horizontal(
            get_color_from_hex('#E53182'),
            get_color_from_hex("#FCE4EC"),
            )

<GridProduct@MDGridLayout>:
    cols: 2
    adaptive_height: True

<Title@MDBoxLayout>:
    adaptive_height: True
    MDCard:
        size_hint_y: None
        height: self.minimum_height
        padding: dp(10)
        MDLabel:
            text: "Upload Your Product Information"
            size_hint_y: None
            height: self.texture_size[1]
            font_style:"Money"
            font_size: dp(18)

<PicArt@MDCard>:
    root: None
    orientation: "vertical"
    size_hint_y: None
    height: Window.height/2.5
    radius: [dp(10)]
    ScrollView:
        effect_cls: ScrollEffect
        do_scroll_y: False
        MDBoxLayout:
            adaptive_width: True
            padding: dp(20)
            spacing: dp(20)
            ProductCard:
                id: _pic1
                size_hint_x: None
                width: root.width/3.2
                ripple_behavior: True
                on_release:
                    root.root.open_filechooser(self)

            ProductCard:
                id: _pic2
                size_hint_x: None
                width: root.width/3.2
                ripple_behavior: True
                on_release:
                    root.root.open_filechooser(self)

            ProductCard:
                id: _pic3
                size_hint_x: None
                width: root.width/3.2
                ripple_behavior: True
                on_release:
                    root.root.open_filechooser(self)
    MDBoxLayout:
        adaptive_height: True
        padding: dp(10)
        MDLabel:
            text: "touch the widget above \nto select your product image"
            size_hint_y: None
            height: self.texture_size[1]
            font_style: "Money"

<MDTextField>:
    on_focus: app.on_focus(args[1])
<TextInput>:
    on_focus: app.on_focus(args[1])

<Fields@MDCard>:
    size_hint_y: None
    height: self.minimum_height
    orientation: "vertical"
    radius: [dp(5)]
    padding: dp(20)
    spacing: dp(10)
    root: None
    MDTextField:
        id: name
        hint_text: "product name:"
        icon_right: "square-edit-outline"
        helper_text_mode: "on_error"
        required: True

    MDTextField:
        id: des
        hint_text: "product Description:"
        icon_right: "text-subject"
        helper_text_mode: "on_error"
        required: True

    MDTextField:
        id: price
        hint_text: "product price:"
        icon_right: "currency-ngn"
        helper_text_mode: "on_error"
        input_filter: "float"
        required: True

    PhoneTextField:
        id: phone
        hint_text: "current phone number:"
        icon_right: "card-account-phone-outline"
        input_filter: "int"
        max_text_length: 11
        helper_text_mode: "on_error"
        required: True
        on_focus: self.do_focus(args[1])

    MDTextField:
        id: email
        hint_text: "current email:"
        icon_right: "email"
        helper_text_mode: "on_error"
        required: True

    Locator:
        id: location
        hint_text: "current location:"
        icon_right: "map-marker"
        helper_text_mode: "on_error"
        required: True



    MDRoundFlatIconButton:
        icon: "cloud-upload"
        text: "Upload All Information"
        pos_hint: {"center_x": .5}
        on_release:
            root.root.upload_product_data(name, des, price, phone, email, location, root.root.ids.holder.children[1].ids._pic1, root.root.ids.holder.children[1].ids._pic2, root.root.ids.holder.children[1].ids._pic3)


<EasySearch@MDBoxLayout>:
    padding: dp(5), 0, dp(5), 0
    size_hint_y: None
    _size: 0, 0
    size: self._size
    radius: dp(5)
    MDBoxLayout:
        orientation: "vertical"
        md_bg_color: 1, 1, 1, 1
        radius: dp(5)
        spacing: dp(5)
        MDBoxLayout
            adaptive_height: True
            canvas:
                Color:
                    rgba: get_color_from_hex('#D0D0D0')
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: root.radius
                    texture:
                        Gradient.horizontal(
                        get_color_from_hex('3F2F3F'),
                        get_color_from_hex("787878"),
                        )
            MDLabel
                text: "Easy Search"
                adaptive_height: True
                padding: dp(5), dp(5)
                color: 1, 1, 1, 1
        MDGridLayout:
            cols: 4
            spacing: dp(5)
            CategoryCard:
                text: "Phones"
                source: "assets/portables.png"
                radius: dp(20)
                texture_color: get_color_from_hex('3F3F3F')
                texture:
                    Gradient.horizontal(
                    get_color_from_hex('3F2F3F'),
                    get_color_from_hex("787878"),
                    )
            CategoryCard:
                text: "Laptop(HP)"
                source: "assets/portables.png"
                radius: dp(20)
            CategoryCard:
                text: "Foam(Bed)"
                source: "assets/portables.png"
                radius: dp(20)
                texture_color: get_color_from_hex('3F3F3F')
                texture:
                    Gradient.horizontal(
                    get_color_from_hex('3F2F3F'),
                    get_color_from_hex("787878"),
                    )
            CategoryCard:
                text: "Shoes"
                source: "assets/portables.png"
                radius: dp(20)


<HomeProductCard>:
    # imagePath: ""
    store: ""
    product: ""
    price: "0"
    check: ""
    text_radius: [dp(5)]
    rate: 4
    radius: [dp(10)]
    data: {"product": self.product, "store": self.store}
    size_hint_y: None
    _size: 0, 0
    size: self._size
    padding: [dp(10), 0, dp(10), 0]
    image: image
    MDCard:
        radius: dp(30)
        padding: dp(15)
        spacing: dp(20)
        M_FitImage:
            id: image
            source: root.source
            radius: root.radius
            size_hint_x: .7
        MDBoxLayout:
            orientation: "vertical"
            spacing: dp(2)
            M_AKLabelLoader:
                text:
                    "" if not (root.price and root.product) else \
                    f"{shorten(root.product, width=20, placeholder='...')}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}][font=Roboto]₦[/font]{float(root.price.replace(',', '')) + 5/100 * float(root.price.replace(',', '')):,}[/color][/b]" if \
                    not root.check else f"{root.product}\n[b][color={get_hex_from_color(app.theme_cls.primary_color)}]{root.price}[/color][/b]"
                radius: root.text_radius
                size_hint_y: None
                markup: True
                height: dp(20) if not self.text else self.texture_size[1]

            AKRating:
                id: rates
                normal_icon: 'star-box-outline'
                active_icon: 'star-box'
                animation_type: 'grow'
                normal_color: app.theme_cls.disabled_hint_text_color
                active_color: app.theme_cls.primary_color
                icon_size: dp(20)
                disabled: True
                _selected: root.rate
            MDLabel:
                text: f"[color=388E3C]store:[/color] NocenStore"
                #color: get_color_from_hex("388E3C")
                font_style: "Money"
                markup: True

            MDBoxLayout:
                orientation: "vertical"
                adaptive_height: True
                radius: [dp(5)]
                padding:[dp(5), 0, dp(5), 0]
                MDCard:
                    size_hint_y: None
                    height: self.minimum_height
                    md_bg_color: app.theme_cls.primary_color
                    padding: dp(10)
                    radius: [dp(5)]
                    on_release:
                        root.parent.root.prev_screen.append(root.parent.roots.name)
                        check_add_widget(app, "lookout_widget", root.parent, Factory.ProductLookOut(), "lookout")
                        root.parent.root.current = "lookout"
                        root.parent.root.ids.lookout.ids.product_name.text = root.product
                        #self.parent.root.ids.lookout.ids.store.text = self.store
                        root.parent.root.ids.lookout.update_interface(root.data)

                    MDLabel:
                        text: "View Product"
                        font_style: "Button"
                        size_hint_y: None
                        height: self.texture_size[1]
                        halign: "center"
                        theme_text_color: "Custom"
                        text_color: 1,1,1,1

<NavButton@Button_Item>:
    icon_color: app.theme_cls.primary_color
    text_color: app.theme_cls.primary_color
    button_bg_color: 1, 1, 1, 1
    badge_disabled: True

<DropListItem>
    text: root.text
    divider: None

    IconLeftWidget:
        icon: root.icon

<TickerTab@MDCard>:
    size_hint: None, None
    radius: dp(15)
    text: ""
    size: self.minimum_size
    md_bg_color: app.theme_cls.primary_color
    ripple_behavior: True
    MDLabel:
        text: root.text
        bold: True
        padding: dp(15), dp(7)
        adaptive_size: True
        color: 1, 1, 1, 1
        markup: True

<TopLayerHome>:
    adaptive_height: True
    padding: dp(5)
    spacing: dp(10)
    callback: lambda: None
    TickerTab:
        text: f"Categories [font=Icons]{md_icons['chevron-down-circle']}[/font]"
        on_release: root.call_category_dialog()
    TickerTab:
        text: f"Sections [font=Icons]{md_icons['chevron-down-circle']}[/font]"
        on_release: root.call_platform_dialog()
    MDBoxLayout:
        adaptive_height: True
        orientation: "vertical"
        MDCard:
            size_hint: None, None
            size: self.minimum_size
            radius: dp(20)
            elevation: .1
            pos_hint: {"right": 1}
            ripple_behavior: True
            on_release: root.callback()
            MDIcon:
                icon: "cart-variant"
                color: app.theme_cls.primary_color
                padding: dp(10), dp(10)
                adaptive_size: True
                font_size: dp(15)

<LogoPanel@MDBoxLayout>:
    spacing: dp(10)
    size_hint_y: None
    _size: 0, 0
    size: self._size
    AsyncImage:
        source: "assets/N1d.PNG"
        pos_hint: {"center_y": .5}
    AsyncImage:
        source: "assets/unilink.png"
        pos_hint: {"center_y": .5}

<RaisedButton@MDBoxLayout>
    adaptive_height: True
    orientation: "vertical"
    icon_bg_color: 1, 1, 1, 1
    icon: ""
    text: ""
    callback: lambda: None
    MDCard:
        pos_hint: {"center_x": .5}
        orientation: "vertical"
        size_hint: None, None
        size: dp(125), dp(100)
        padding: dp(10)
        elevation: 0.1
        md_bg_color: get_color_from_hex("#F5F5F5")
        radius: dp(30)
        ripple_behavior: True
        ripple_color: root.icon_bg_color
        on_release: root.callback()
        MDIcon:
            theme_text_color: "Custom"
            text_color: 1, 1, 1, 1
            halign: "center"
            icon: root.icon
            pos_hint: {"center_x": .5}
            size_hint: None, None
            size: "48dp", "48dp"
            canvas.before:
                Color:
                    rgba: root.icon_bg_color
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [self.width]
        MDLabel:
            text: root.text
            halign: "center"
            bold: True
            font_size: "12sp"


<CategoryContent@RelativeLayout>:
    size_hint_y: None
    height: grid.height + dp(10)
    MDGridLayout
        id: grid
        adaptive_height: True
        cols: 2
        padding: dp(2)
        spacing: dp(45), dp(15)
        RaisedButton:
            icon: "television-classic"
            icon_bg_color: get_color_from_hex("#4CAF50")
            text: "ELECTRONICS"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "electronics", root.dialog), 1)
        RaisedButton:
            icon: "cellphone"
            icon_bg_color: get_color_from_hex("#FF1744")
            text: "PORTABLES"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "portables", root.dialog), 1)
        RaisedButton:
            icon: "chair-rolling"
            icon_bg_color: get_color_from_hex("#AA00FF")
            text: "FURNITURE"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "furniture", root.dialog), 1)
        RaisedButton:
            icon: "tshirt-crew"
            icon_bg_color: get_color_from_hex("#2962FF")
            text: "CLOTHING"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "clothing", root.dialog), 1)
        RaisedButton:
            icon: "lipstick"
            icon_bg_color: get_color_from_hex("#C51162")
            text: "BEAUTY"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "beauty", root.dialog), 1)
        RaisedButton:
            icon: "pot-steam"
            icon_bg_color: get_color_from_hex("#FF6D0")
            text: "KITCHEN"
            callback: lambda: Clock.schedule_once(lambda x: root.root.change_screen(self, "kitchen", root.dialog), 1)

<PlatformContent@RelativeLayout>:
    size_hint_y: None
    height: grid.height + dp(10)
    MDGridLayout
        id: grid
        adaptive_height: True
        cols: 2
        padding: dp(2)
        spacing: dp(45), dp(15)
        RaisedButton:
            icon: "shopping"
            icon_bg_color: .8, 0, 0, 1
            text: "TODAY'S DEALS"
            item: "Deals"
            callback:
                lambda: Clock.schedule_once(lambda x: exec("root.root.manager.on_next_screen(root.root.name);"
                "check_add_widget(app, 'deals_widget', root.root, Factory.Deals(), 'deals');"
                "root.root.manager.current = self.item.lower(); root.dialog.dismiss()"), 1)
        RaisedButton:
            icon: "headset"
            icon_bg_color: app.theme_cls.primary_color
            text: "CUSTOMER CARE"
            item: "Customer Care"
            callback:
                lambda: Clock.schedule_once(lambda x: exec("root.root.manager.on_next_screen(root.root.name);"
                "check_add_widget(app, 'customer_care_widget', root.root, Factory.CustomerCare(), 'customer');"
                "root.root.manager.current = self.item.lower(); root.dialog.dismiss()"), 1)
        RaisedButton:
            icon: "heart"
            icon_bg_color: 1, .7, 0, 1
            text: "SAVED ITEMS"
            item: "Saved Items"
            callback:
                lambda: Clock.schedule_once(lambda x: exec("root.root.manager.on_next_screen(root.root.name);"
                "check_add_widget(app, 'saved_product_widget', root.root, Factory.SavedProduct(), 'saved');"
                "root.root.manager.current = self.item.lower(); root.dialog.dismiss()"), 1)
        RaisedButton:
            icon: "school"
            icon_bg_color: 1, 0, .8, 1
            text: "STUDENT ZONE"
            item: "Student Zone"
            callback:
                lambda: Clock.schedule_once(lambda x: exec("root.root.manager.on_next_screen(root.root.name);"
                "check_add_widget(app, 'student_info_widget', root.root, Factory.StudentInfo(), 's_zone');"
                "root.root.manager.current = self.item.lower(); root.dialog.dismiss()"), 1)

<CardButton@MDCard>:
    text: ""
    radius: dp(5)
    size_hint: None, None
    size: self.minimum_size
    text_color: 1, 1, 1, 1
    font_style: "H6"
    md_bg_color: app.theme_cls.primary_color
    ripple_behavior: True
    halign: "left"
    text_adaptive_size: True
    MDLabel:
        text: root.text
        padding: dp(30), dp(10)
        adaptive_size: root.text_adaptive_size
        markup: True
        halign: root.halign
        font_style: root.font_style
        color: root.text_color

<SizeSelector@RecycleView>:
    effect_cls: _ScrollViewHardStop
    do_scroll_y: False
    viewclass: "PlanItem"
    size_hint_y: None
    height: dp(60)
    RecycleBoxLayout:
        id: holder
        root: root
        default_size_hint: None, None
        default_size: dp(40), dp(40)
        size_hint: None, None
        size: self.minimum_width ,self.minimum_height
        spacing:dp(5)
        orientation: "horizontal"

<IconLabel@MDBoxLayout>:
    orientation: "vertical"
    adaptive_height: True
    icon: ""
    text: ""
    callback: lambda: None
    ic_bg_color: app.theme_cls.disabled_hint_text_color
    MDBoxLayout:
        adaptive_size: True
        md_bg_color: get_color_from_hex("#F0F0F0")
        radius: [dp(10), dp(10), dp(10), dp(3)]
        pos_hint: {"center_x": .5}
        MDIconButton:
            icon: root.icon
            theme_text_color: "Custom"
            text_color: root.ic_bg_color
            on_release: root.callback()
    MDLabel:
        text: root.text
        adaptive_height: True
        halign: "center"
        font_style: "Caption"

<NoLinerToolBar@MDBoxLayout>:
    icon_right: ""
    icon_left: ""
    title: ""
    icon_right_color: app.theme_cls.text_color
    icon_right_callback: None
    icon_left_callback: None
    adaptive_height: True
    padding: dp(10)
    md_bg_color: [1,1,1,1] if app.theme_cls.theme_style == "Light" else get_color_from_hex("1f1f1f")

    MDBoxLayout:
        adaptive_size: True
        md_bg_color: get_color_from_hex("#F0F0F0")
        radius: [dp(10), dp(10), dp(10), dp(3)]
        MDIconButton:
            icon: root.icon_left
            pos_hint: {"center_y": .5}
            on_release: root.icon_left_callback()

    MDLabel:
        text: root.title + f"[color={get_hex_from_color(app.theme_cls.primary_color)}]•[/color]"
        color: [1,1,1,1] if app.theme_cls.theme_style == "Dark" else [0,0,0,.7]
        markup: True
        font_style:"BigMoney"
        bold: True
        halign: "center"
        pos_hint:{"center_y": .5}
    MDBoxLayout:
        adaptive_size: True
        md_bg_color: get_color_from_hex("#F0F0F0")
        radius: dp(10)
        MDIconButton:
            icon: root.icon_right
            pos_hint: {"center_y": .5}
            theme_text_color: "Custom"
            text_color: root.icon_right_color
            on_release: root.icon_right_callback()